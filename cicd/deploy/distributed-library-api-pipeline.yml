trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src
    exclude:
      - cicd/infra/*

pool:
  vmImage: ubuntu-latest

parameters:
  - name: dotnet_sdk
    type: string
    default: "7.0.x"

  - name: deploy_db
    type: boolean
    default: false
    displayName: Deploy database

  - name: deploy_ui
    type: boolean
    default: true
    displayName: Deploy UI

  - name: run_tests
    type: boolean
    default: true
    displayName: Run Tests

  - name: min_test_coverage
    type: number
    default: 5

  - name: configuration
    type: string
    default: "Release"

variables:
  - group: shared_variables
  - group: dev_variables
  - group: dev_manual_variables
  - name: project
    value: distributed-library
  - name: project_main_git_branch
    value: "refs/heads/master"

  
jobs:
  - job: initjob
    displayName: Initialize
    continueOnError: false
    workspace:
      clean: outputs

    steps:
      - checkout: self
        clean: true
        submodules: true

  - ${{ if eq(parameters.deploy_db, true) }}:
    - template: ./jobs/build-and-deploy-dacpac.yml     
      parameters:
        dependsOn: initjob
        project_name: 'DistributedLibrary.Database'     
        service_connection: $(__service_endpoint_name)    
        configuration: ${{ parameters.configuration }}
        databaseServer: $(__mssql_0_server_name)
        databaseName: $(__mssql_backend_database_name)
        databaseUser: $(__mssql_0_admin_username)
        databasePassword: $(__mssql_0_admin_password)


  - template: ./jobs/build-and-deploy-dotnet-app.yml
    parameters:
      dependsOn: initjob
      application: ${{ variables.project }}-ui
      project_path: src/DistributedLibrary.UI/DistributedLibrary.UI.csproj
      data_project_path: src/DistributedLibrary.Data/DistributedLibrary.Data.csproj
      startup_project_path: src/DistributedLibrary.UI/DistributedLibrary.UIcsproj
      test_project_path: src/DistributedLibrary.UnitTests/DistributedLibrary.UnitTests.csproj
      nuget_packages_directory: $(Pipeline.Workspace)/Nuget/packages
      app_settings: >-
          -ASPNETCORE_ENVIRONMENT "$(__dotnet_environment)"
          -DOTNET_ENVIRONMENT "$(__dotnet_environment)"
          -DatabaseConfiguration__ConnectionString "$(__mssql_backend_connection_string)"
          -RedisConfiguration__ConnectionString "<not set>"
          -ApplicationInsightsConfiguration__ConnectionString "$(__appinsights_connection_string)"
          -CommunicationServiceConfiguration__ConnectionString "$(__communication_service_0_connection_string)"
          -Authentication__Google__ClientId "$(GoogleClientId)"
          -Authentication__Google__ClientSecret "$(GoogleClientSecret)"
          -ApplicationConfiguration__Host "$(__webapp_ui_hostname)"
      ef_migrations_connection_string: ''
      service_connection: $(__service_endpoint_name)
      web_app_name: $(__webapp_ui)
      dotnet_sdk: ${{ parameters.dotnet_sdk }}
      configuration: ${{ parameters.configuration }}
      run_tests: ${{ parameters.run_tests }}
      min_test_coverage: ${{ parameters.min_test_coverage }}
      deploy: ${{ parameters.deploy_ui }}
